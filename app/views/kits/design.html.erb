<!-- The class below "expand-md" sets at what width the navbar will transform to a hamburger menu (If you change it to "lg" it will switch when the screen is wider)   -->
<div id="shoppingCartQuantityContainer">

    <%=@items_in_cart%>

</div>
<%flash[:alert]%>
<div id="shoppingCartListAbsolute">
    <%= react_component("App", props: session[:temporary_cart].to_json)%>
    <%= stylesheet_pack_tag 'ShoppingCart' %>
    <!-- <div class="cartRow">
        <div class="itemQuantity"> 1 </div>
        <div class="itemTitle"> R&B Guitar </div>
        <div class="deleteItem"> 
            <i class="fas fa-trash-alt"></i>
        </div>
        <div class="itemPrice"> $12.95 </div>
    </div>
    <div class="totalContainer">
        <div class="totalText">Total:</div>
        <div class="totalPrice">$12.95</div>
    </div>

    <div class="emptyBag">Empty Bag</div>
    <div class="checkoutOuterContainer">
        <div class="proceedToCheckoutContainer">
            Proceed to Checkout: $12.95
        </div>
    </div> -->
</div>
<nav class="navbar navbar-expand-md navbar-light navbarText">
    <!-- <div id="absoluteNav">
            <div class="absoluteNavTitleShadow"></div>
            <div class="absoluteNavSectionsShadow"></div>
            <div class="absoluteNavCartSection">

                        <div id="shoppingCartOuterContainer"> 
                            <div id="shoppingCartLink">
                                Your Cart 
                                <br>
                                    <i class=" fa-2x fas fa-shopping-cart"></i>
                            </div>
                        </div>
                       
            </div>
            <div class="absoluteNavSoundcloudShadow"></div>

        </div> -->
    <a id="logoText" class="navbar-brand">
        <img id="logo" src="pics/guitarLogo.png"> Caleb Elias G sounds
    </a>
    <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNav" aria-controls="navbarNav"
        aria-expanded="false" aria-label="Toggle navigation">
        <span id="hamburgerMenu" class="navbar-toggler-icon"></span>
    </button>
    <div class="collapse navbar-collapse" id="navbarNav">
        <ul class="navbar-nav mr-auto">
            <li class="nav-item ">
                <a id="latestReleasesLink" class="nav-link">Latest Releases</a>
            </li>

            <li class="nav-item ">
                <a id="drumMachineLink" class="nav-link">Drum Machine</a>
            </li>




        </ul>
        <ul class="navbar-nav">


            <li class="nav-item ">
                <div id="login" class="nav-link">
                    Login
                </div>
            </li>

            <li class="nav-item ">
                <div id="signup" class="nav-link">
                    Signup
                </div>
            </li>

            <li class="nav-item ">
                <div id="logout" class="nav-link">
                    logout
                </div>
            </li>

            <li class="nav-item ">
                <div class="nav-link icon">
                    <i id="shoppingCartIcon" class=" fa-2x fas fa-shopping-cart"></i>
                </div>
            </li>

            <!-- <li class="nav-item ">
                <a class="nav-link icon" target="_blank" href="https://soundcloud.com/calebeliasgmusic">
                    <i class="fab fa-soundcloud fa-2x soundcloud"></i>
                </a>
            </li> -->
            <!-- <li class="nav-item">
                <a class="nav-link icon" target="_blank" href="https://www.instagram.com/calebeliasgmusic/">
                    <i class="fab fa-instagram fa-2x instagram"></i>
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link icon" target="_blank" href="https://open.spotify.com/artist/3KfwtF94LanpNpDp6yVCji?si=CT4egyHCTdSWRJZtHqREOQ">
                    <i class="fab fa-spotify fa-2x spotify"></i>
                </a>
            </li> -->
            <li class="nav-item ">
                <a class="nav-link textNoIcon soundcloud" target="_blank" href="https://soundcloud.com/calebeliasgmusic">Soundcloud</a>
            </li>
            <li class="nav-item">
                <a class="nav-link textNoIcon instagram" target="_blank" href="https://www.instagram.com/calebeliasgmusic/">Instagram</a>
            </li>
            <li class="nav-item">
                <a class="nav-link textNoIcon spotify" target="_blank" href="https://open.spotify.com/artist/3KfwtF94LanpNpDp6yVCji?si=CT4egyHCTdSWRJZtHqREOQ">Spotify</a>
            </li>
        </ul>

    </div>
</nav>

<!-- <div id="accidentButCool">

</div> -->

<div id="section1">
    <div class="section1row"></div>
    <div class="section1row">
        <div id="section1BigTextOuterContainer">
            <div id="section1BigText">
            </div>
        </div>
    </div>
    <div class="section1row">

    </div>
    <div class="section1row"></div>
</div>
<div id="preSection2"></div>
<div id="section2">
    <div id="section2title">
        Latest Releases
    </div>

    <div id="mainContainer">
        <div id="chairsText"></div>
        <% i = 1 %>
        <% @tracks.each do |track| %>

        <% if i % 2 != 0 %>
        <div id="cardsContainer">
            <%end %>
            <iframe class="soundclouds" id="sc-widget<%=i%>" src="https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/<%=track.soundcloud_id%>&visual=true"></iframe>


            <div class="card" style="width: 18rem;">
                <div id="playIconOuterContainer<%=i%>" class="playIcon">
                    <i id="playAndPauseIcon<%=i%>" class="fas fa-play fa-3x playAndPauseIcon"></i>
                </div>
                <h5 class="card-title">
                    <%=track.name%>
                </h5>
                <img class="card-img-top" src="<%=url_for(track.cover_art)%>" alt="Card image cap">
                <div class="card-body">

                    <p class="card-text">
                        Released:
                        <%=track.release_date.strftime("%m/%d/%y")%>

                    </p>

                </div>

            </div>

            <%i+=1%>
            <% if i % 2 != 0 %>
        </div>
        <% end %>
        <% end %>

    </div>

</div>

<div id="drumMachineSection">
    <div id="drumMachineSectionTitle">Drum Machine</div>

    <div id="drumMachineContainer">
        <div id="drumMachineTopContainer">
            <a id="drumMachineLogoText" class="navbar-brand">
                <img id="drumMachineLogo" src="pics/guitarLogo.png"> Sounds from:
                <span id="currentKitName"> "New Thang" </span> -
                <span id="currentKitPrice" style="font-size: 13px">$3.99</span>
            </a>
            <div id="addToCartContainer">
                <button id="addToCartButton" type="button" class="btn btn-primary">
                    <i class="fas fa-shopping-cart"></i>
                    Add to cart

                </button>
            </div>

        </div>

        <div id="drumMachineMainContainer">
            <div id="drumMachineLeftMain">
                <div id="drumMachineLeftTop">
                    <div id="soundPackImageContainer">
                        <img id="soundPackImage" src="pics/beatTape18Caleb.jpg" alt="Smiley face">
                    </div>
                </div>
                <div id="drumMachineLeftBottom">

                    <div id="packsGallery">
                        <i id="prevBtn" class="fas fa-arrow-left fa-3x"></i>
                        <div class="galleryImageContainer">
                            <img src="" class="galleryImage">
                        </div>
                        <div class="galleryImageContainer" style="opacity: .8">
                            <img src="" class="galleryImage">
                        </div>
                        <div class="galleryImageContainer">
                            <img src="" class="galleryImage">
                        </div>
                        <div class="galleryImageContainer">
                            <img src="" class="galleryImage">
                        </div>
                        <div class="galleryImageContainer">
                            <img src="" class="galleryImage">
                        </div>
                        <i id="nextBtn" class="fas fa-arrow-right fa-3x"></i>
                    </div>
                </div>
            </div>
            <div id="drumMachineRightMain">
                <div class="padRow">
                    <div class="padContainer">
                        <div class="padText">
                            Guitar
                        </div>
                        <div class="pad">
                        </div>
                    </div>
                    <div class="padContainer">
                        <div class="padText">
                            Snare
                        </div>
                        <div class="pad"></div>
                    </div>
                    <div class="padContainer">
                        <div class="padText">
                            Piano
                        </div>
                        <div class="pad">

                        </div>
                    </div>
                    <div class="padContainer">
                        <div class="padText">
                            Bend1
                        </div>
                        <div class="pad"></div>
                    </div>
                </div>
                <div class="padRow">
                    <div class="padContainer">
                        <div class="padText">
                            Horn
                        </div>
                        <div class="pad"></div>
                    </div>
                    <div class="padContainer">
                        <div class="padText">
                            Kick
                        </div>
                        <div class="pad"></div>
                    </div>
                    <div class="padContainer">
                        <div class="padText">
                            808
                        </div>
                        <div class="pad"></div>
                    </div>
                    <div class="padContainer">
                        <div class="padText">
                            Clap
                        </div>
                        <div class="pad"></div>
                    </div>
                </div>
                <div class="padRow">
                    <div class="padContainer">
                        <div class="padText">
                            Guitar2
                        </div>
                        <div class="pad"></div>
                    </div>
                    <div class="padContainer">
                        <div class="padText">
                            Rhodes
                        </div>
                        <div class="pad"></div>
                    </div>
                    <div class="padContainer">
                        <div class="padText">
                            Tamborine
                        </div>
                        <div class="pad"></div>
                    </div>
                    <div class="padContainer">
                        <div class="padText"></div>
                        <div class="pad"></div>
                    </div>
                </div>
                <div class="padRow">
                    <div class="padContainer">
                        <div class="padText"></div>
                        <div class="pad"></div>
                    </div>
                    <div class="padContainer">
                        <div class="padText"></div>
                        <div class="pad"></div>
                    </div>
                    <div class="padContainer">
                        <div class="padText"></div>
                        <div class="pad"></div>

                    </div>
                    <div class="padContainer">
                        <div class="padText"></div>
                        <div class="pad"></div>

                    </div>
                </div>
            </div>
        </div>
        <div id="drumMachineBottomContainer">
        </div>
    </div>

    <div id="shoppingCartContainer">


    </div>
</div>


</div>
</div>
</div>

<!-- Button trigger modal -->
<button id="modal" type="button" class="btn btn-primary" data-toggle="modal" data-target="#exampleModal">
    Launch demo modal
</button>

<!-- Modal -->
<div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Modal title</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <h2>Log in</h2>

                <form id="ajax_signin" action="/users/sign_in" accept-charset="UTF-8" method="post"><input name="utf8"
                        type="hidden" value="✓"><input type="hidden" name="authenticity_token" value="<%=form_authenticity_token%>">

                    <div class="field">
                        <label for="user_email">Email</label><br>
                        <input autofocus="autofocus" autocomplete="email" type="email" name="user[email]" id="user_email">
                    </div>

                    <div class="field">
                        <label for="user_password">Password</label><br>
                        <input autocomplete="current-password" type="password" name="user[password]" id="user_password">
                    </div>

                    <div class="actions">
                        <input type="submit" name="commit" value="Log in">
                    </div>

                    <div id="wrongLogin"> </div>
                </form>




            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary">Save changes</button>
            </div>

        </div>
    </div>



</div>

<h2>Sign up</h2>

<%= form_for(:user, url: registration_path(:user)) do |f| %>

<div class="field">
    <%= f.label :email %><br />
    <%= f.email_field :email, autofocus: true, autocomplete: "email" %>
</div>

<div class="field">
    <%= f.label :password %>
    <% if @minimum_password_length %>
    <em>(
        <%= @minimum_password_length %> characters minimum)</em>
    <% end %><br />
    <%= f.password_field :password, autocomplete: "new-password" %>
</div>

<div class="field">
    <%= f.label :password_confirmation %><br />
    <%= f.password_field :password_confirmation, autocomplete: "new-password" %>
</div>

<div class="actions">
    <%= f.submit "Sign up" %>
</div>
<% end %>


<script src="https://w.soundcloud.com/player/api.js" type="text/javascript"></script>

<script>
<% if current_user %>
        document.getElementById("login").style.display = "none"
    document.getElementById("signup").style.display = "none"
    document.getElementById("logout").style.display = "block"
        <% else %>
            document.getElementById("login").style.display = "block"
    document.getElementById("signup").style.display = "block"
    document.getElementById("logout").style.display = "none"
        <% end %>


    <% if @wrong_info == true %>

        document.getElementById("modal").click()
        <% end %>

    const convertToUsCurrency = new Intl.NumberFormat('en-US', {
            style: 'currency',
            currency: 'USD',
            minimumFractionDigits: 2
        })

    let indexForPadUpdate

    let counterObj = {
    };

    let soundsObj = {}


    document.addEventListener("DOMContentLoaded", function () {


        let galleryImages = document.getElementsByClassName("galleryImage")


        let highLightedPick = galleryImages[1].parentElement


        function soundPackImage() {
            let id = this.id

            $.ajax({
                method: "GET",
                url: `/kits/${this.id}/loadSounds`,
                dataType: 'script'
            });

            document.getElementById("soundPackImage").src = this.src
            document.getElementById("currentKitName").innerText = this.dataset.name
            document.getElementById("soundPackImage").dataset.price = this.dataset.price
            document.getElementById("soundPackImage").dataset.name = this.dataset.name
            this.parentElement.style.opacity = "1"
            highLightedPick.style.opacity = ".6"
            highLightedPick = this.parentElement

        }


        // constructor for linked list
        function LinkedList() {
            this.head = null;
            this.tail = null;
        }

        // constructor for new node being added
        function Node(value, next, prev) {
            this.value = value;
            this.next = next;
            this.prev = prev;
        }

        LinkedList.prototype.addToHead = function (value) {
            const newNode = new Node(value, this.head, null);
            if (this.head) this.head.prev = newNode;
            else this.tail = newNode;
            this.head = newNode;
        };

        LinkedList.prototype.addToTail = function (value) {
            const newNode = new Node(value, null, this.tail);
            if (this.tail) this.tail.next = newNode;
            else this.head = newNode;
            this.tail = newNode;
        }

        const list = new LinkedList();

<%@kits.each do | kit | %>
            list.addToTail(
                {
                    id: <%=kit.id %>,
                    pic: "<%=url_for(kit.cover_art)%>",
                    price: <%=kit.price %>,
                    name: "<%=kit.name %>"
                });
<% end %>




            list.head.prev = list.tail
        list.tail.next = list.head

        let currentNode = list.head
        // setting initial values that will be posted to backend for shopping cart when user clicks "add to cart"
        document.getElementById("addToCartButton").dataset.kitId = list.head.value.id
        document.getElementById("addToCartButton").dataset.pic = list.head.value.pic
        document.getElementById("addToCartButton").dataset.price = list.head.value.price
        document.getElementById("currentKitPrice").innerText = convertToUsCurrency.format(list.head.value.price)
        document.getElementById("currentKitName").innerText = list.head.value.name
        let tempCurrentNode = currentNode

        for (let i = 0; i < 5; i++) {
            galleryImages[i].addEventListener("click", soundPackImage)

            galleryImages[i].src = currentNode.value.pic
            galleryImages[i].id = currentNode.value.id
            galleryImages[i].dataset.price = currentNode.value.price
            galleryImages[i].dataset.name = currentNode.value.name
            currentNode = currentNode.next

        }

        function nextPic() {
            if (this.id !== "nextBtn") {
                currentNode = tempCurrentNode.next
            } else {
                currentNode = tempCurrentNode.prev
            }

            tempCurrentNode = currentNode
            for (let i = 0; i < 5; i++) {
                galleryImages[i].src = currentNode.value.pic
                galleryImages[i].id = currentNode.value.id
                galleryImages[i].dataset.price = currentNode.value.price
                galleryImages[i].dataset.name = currentNode.value.name
                currentNode = currentNode.next
            }
        }

        document.getElementById("nextBtn").addEventListener("click", nextPic)
        document.getElementById("prevBtn").addEventListener("click", nextPic)


        let pads = document.getElementsByClassName("pad")
        let padText = document.getElementsByClassName("padText")


        let x = 0

            <% @sounds.each do | sound | %>
                console.log(x)
    soundsObj[`pad${x + 1}`] = "<%=url_for(sound.soundfile)%>"
    console.log(padText[x])
        padText[x].innerText = `<%=sound.soundfile.filename%>.split[0]`
        console.log(padText[x].innerText)
        x++


            <% end %>

for (let i = 0; i < pads.length; i++) {
            counterObj[`newPadCounterpad${i + 1}`] = 0;
            pads[i].id = `pad${i + 1}`;
            pads[i].addEventListener('mousedown', padDown)
            counterObj['newPadCounter' + (i + 1)] = 0;
        }


        function padDown() {
            playAndStop(this.id)

            let pad = this
            pad.classList.add("padDown")

            setTimeout(function () {
                pad.classList.remove("padDown")
            }, 80);

        }

        let firstPlayCounter;

        var AudioContext = window.AudioContext || window.webkitAudioContext;

        var context = new AudioContext();
        var gainNode = context.createGain();

        function playSound(number) {

            window[`bufferNode${number}`]
            let bufferNodeName = window[`bufferNode${number}`]

            window[`bufferNode${number}`] = context.createBufferSource();

            var request = new XMLHttpRequest();
            request.open('GET', soundFile, true);
            request.responseType = 'arraybuffer';
            request.onload = function () {
                context.decodeAudioData(
                    request.response,
                    function (buffer) {
                        window[`bufferNode${number}`].buffer = buffer;
                        window[`bufferNode${number}`].connect(gainNode);
                        gainNode.connect(context.destination);
                        gainNode.gain.setValueAtTime(1, context.currentTime);
                    },
                    function (e) { console.log("Error with decoding audio data" + e.err); }
                );
            };
            request.send()
            window[`bufferNode${number}`].start()
        };

        function stopSound(number) {
            let bufferNodeName = window[`bufferNode${number}`]
            bufferNodeName.stop(context.currentTime);
        };

        function playAndStop(pad) {

            var numberPattern = /\d+/g;
            let number = pad.match(numberPattern).join([]);
            firstPlayCounter = counterObj[`newPadCounter${pad}`]
            counterObj[`newPadCounter${pad}`]++
            bufferNodeName = number
            soundFile = soundsObj[pad]

            if (firstPlayCounter === 0) {
                playSound(bufferNodeName, soundFile);
            }
            else {
                stopSound(bufferNodeName);
                playSound(bufferNodeName, soundFile);
            }

        };



    });




</script>